using System.Collections.Generic;
using InazumaElevenSaveEditor.Logic;

namespace InazumaElevenSaveEditor.Common.InazumaElevenGo
{
    public static class BestMatchs
    {
        //  Missing Galaxy Best Matchs

        public static IList<BestMatch> Cs = new List<BestMatch>
        {
                new BestMatch(0x70117122, 0xF04E002B, 0x87471489),
                new BestMatch(0xCA4078BB, 0x6DE97FFF, 0x5AABE88C),
                new BestMatch(0x1E50BFE8, 0xB2F063AB, 0x5DD054A5),
                new BestMatch(0x8860B89F, 0x86E73FE0, 0x1CE14FBC),
                new BestMatch(0x96896D7F, 0x81CA8707, 0x45CDD04C),
                new BestMatch(0x0BB72234, 0xEBB72A17, 0xBF742B22),
                new BestMatch(0x30925599, 0xEBB72A17, 0x30804152),
                new BestMatch(0xA32C0E96, 0x48224E89, 0x71B15A4B),
                new BestMatch(0x6DE97FFF, 0xC7D624F9, 0xA6B04625),
                new BestMatch(0x584C1C16, 0x56CB9B69, 0xB2E27760),
                new BestMatch(0x70117122, 0x54F6DC52, 0xB85993C5),
                new BestMatch(0x69D51C25, 0xC2C6DB25, 0x117713FE),
                new BestMatch(0xFFE51B52, 0x274F1C45, 0x931525CC),
                new BestMatch(0x1E50BFE8, 0xC0FB9C1E, 0xD2243ED5),
                new BestMatch(0xD58ED830, 0x51E6238E, 0x46B2CF78),
                new BestMatch(0xD58ED830, 0x0B2E12AB, 0x052522BB),
                new BestMatch(0xF6B62B74, 0xD58ED830, 0x8B8213CF),
                new BestMatch(0x8FB40FC6, 0xD58ED830, 0x6FB020A4),
                new BestMatch(0x9BE63E83, 0xD58ED830, 0x6FB020A4),
                new BestMatch(0x79424104, 0xD58ED830, 0x6FB020A4),
                new BestMatch(0xEF724673, 0xD58ED830, 0x6FB020A4),
                new BestMatch(0x967062C1, 0xD58ED830, 0x87471489),
                new BestMatch(0x133FEC14, 0xD58ED830, 0x87471489),
                new BestMatch(0x520EF70D, 0xD58ED830, 0x87471489),
                new BestMatch(0x076DDD51, 0xD58ED830, 0xA1CBFA0C),
                new BestMatch(0xAF9AB484, 0xD58ED830, 0xA1CBFA0C),
                new BestMatch(0x74D41D46, 0xD58ED830, 0xA1CBFA0C),
                new BestMatch(0x0EC071F2, 0x00000000, 0x0C76129D),
                new BestMatch(0xB491786B, 0x00000000, 0x9A4615EA),
                new BestMatch(0x22A17F1C, 0x00000000, 0x9E83798E),
                new BestMatch(0x81341B82, 0x00000000, 0x3EFEC993),
                new BestMatch(0x17041CF5, 0x00000000, 0x838278ED),
                new BestMatch(0xAD55156C, 0x00000000, 0x39D37174),
                new BestMatch(0x3B65121B, 0x00000000, 0x20171C73),
                new BestMatch(0xAA78AD8B, 0x00000000, 0xAFE37603),
                new BestMatch(0x3C48AAFC, 0x00000000, 0x20171C73),
                new BestMatch(0xD9C16D9C, 0x00000000, 0xB6271B04),
                new BestMatch(0x4FF16AEB, 0x00000000, 0x15B27F9A),
                new BestMatch(0xF5A06372, 0x00000000, 0x0C76129D),
                new BestMatch(0x63906405, 0x00000000, 0x9A4615EA),
                new BestMatch(0xC005009B, 0x00000000, 0x20171C73),
                new BestMatch(0x563507EC, 0x00000000, 0xB6271B04),
                new BestMatch(0xEC640E75, 0x00000000, 0xB6271B04),
                new BestMatch(0x1E62A874, 0x12EA7FAC, 0xC85E839F),
                new BestMatch(0x3DFD0665, 0x9D1E15DC, 0x30804152),
                new BestMatch(0xBB5A5C33, 0x3E8B7142, 0x2E6994B2),
                new BestMatch(0xDCB1AD61, 0xA8BB7635, 0xD3FDD73B),
                new BestMatch(0x6DE97FFF, 0x1E50BFE8, 0x2AFAFC18),
                new BestMatch(0x1E50BFE8, 0x6DE97FFF, 0x2AFAFC18),
                new BestMatch(0x8860B89F, 0x96896D7F, 0x3FB0EBCA),
                new BestMatch(0x96896D7F, 0x8860B89F, 0x3FB0EBCA),
                new BestMatch(0x96896D7F, 0xE21D158F, 0x3D161D10),
                new BestMatch(0xE21D158F, 0x96896D7F, 0x3D161D10),
                new BestMatch(0x30925599, 0x6DE97FFF, 0x052522BB),
                new BestMatch(0x6DE97FFF, 0x30925599, 0x052522BB),
                new BestMatch(0x30925599, 0xB2F063AB, 0x3A3BA5F7),
                new BestMatch(0xB2F063AB, 0x30925599, 0x3A3BA5F7),
                new BestMatch(0x1E50BFE8, 0x5A99902C, 0x1CE14FBC),
                new BestMatch(0x5A99902C, 0x1E50BFE8, 0x1CE14FBC),
                new BestMatch(0x8D988C42, 0x2DE53C5F, 0xE3443158),
                new BestMatch(0x2DE53C5F, 0x8D988C42, 0xE3443158),
                new BestMatch(0xEA737D10, 0x84CBBC64, 0xAB261A67),
                new BestMatch(0x84CBBC64, 0xEA737D10, 0xAB261A67),
                new BestMatch(0xB2F063AB, 0x1E50BFE8, 0xBF742B22),
                new BestMatch(0x6DE97FFF, 0xCA4078BB, 0x5AABE88C),
                new BestMatch(0xBAE86391, 0x5A99902C, 0x838278ED),
                new BestMatch(0x5A99902C, 0xBAE86391, 0x838278ED),
                new BestMatch(0x96896D7F, 0xE0C899B5, 0xA17551CD),
                new BestMatch(0xE0C899B5, 0x96896D7F, 0xA17551CD),
                new BestMatch(0x351C09E1, 0xCE7C1B61, 0xD19AEE98),
                new BestMatch(0xCE7C1B61, 0x351C09E1, 0xD19AEE98),
                new BestMatch(0x351C09E1, 0xE27150F8, 0xB6271B04),
                new BestMatch(0xE27150F8, 0x351C09E1, 0xB6271B04),
                new BestMatch(0xA32C0E96, 0x1E50BFE8, 0x20171C73),
                new BestMatch(0x1E50BFE8, 0xA32C0E96, 0x20171C73),
                new BestMatch(0x197D070F, 0x8F4D0078, 0xD6E152B1),
                new BestMatch(0x8F4D0078, 0x197D070F, 0xD6E152B1),
                new BestMatch(0x197D070F, 0xFBD97888, 0xA2752A41),
                new BestMatch(0xFBD97888, 0x197D070F, 0xA2752A41),
                new BestMatch(0x1E50BFE8, 0xA32C0E96, 0x20171C73),
                new BestMatch(0xA32C0E96, 0x1E50BFE8, 0x20171C73),
                new BestMatch(0x8860B89F, 0x6DE97FFF, 0x7E81F0D3),
                new BestMatch(0x6DE97FFF, 0x8860B89F, 0x7E81F0D3),
                new BestMatch(0x6DE97FFF, 0x11F7DEC7, 0x6875374C),
                new BestMatch(0x11F7DEC7, 0x6DE97FFF, 0x6875374C),
                new BestMatch(0x6DE97FFF, 0x5E46D19A, 0x2D814031),
                new BestMatch(0x5E46D19A, 0x6DE97FFF, 0x2D814031),
                new BestMatch(0xFBD97888, 0xD7B87666, 0x8877BE11),
                new BestMatch(0xD7B87666, 0xFBD97888, 0x8877BE11),
                new BestMatch(0xE21D158F, 0xCE7C1B61, 0x2BE2DA8F),
                new BestMatch(0xCE7C1B61, 0xE21D158F, 0x2BE2DA8F),
                new BestMatch(0xE21D158F, 0x12FBBB13, 0x9C258F54),
                new BestMatch(0x12FBBB13, 0xE21D158F, 0x9C258F54),
                new BestMatch(0xE21D158F, 0x3E9AB5FD, 0xE43F8D71),
                new BestMatch(0x3E9AB5FD, 0xE21D158F, 0xE43F8D71),
                new BestMatch(0x584C1C16, 0x1BA88B35, 0xEA4105B0),
                new BestMatch(0x1BA88B35, 0x584C1C16, 0xEA4105B0),
                new BestMatch(0xCE7C1B61, 0xEA737D10, 0x40D155C6),
                new BestMatch(0xEA737D10, 0xCE7C1B61, 0x40D155C6),
                new BestMatch(0xDA2E2A24, 0x0B3FD614, 0x7FCFD28A),
                new BestMatch(0x0B3FD614, 0xDA2E2A24, 0x7FCFD28A),
                new BestMatch(0x4C1E2D53, 0xDD0392C3, 0x2AACF8D6),
                new BestMatch(0xDD0392C3, 0x4C1E2D53, 0x2AACF8D6),
                new BestMatch(0x4C1E2D53, 0xEEB61174, 0x573DB4CE),
                new BestMatch(0xEEB61174, 0x4C1E2D53, 0x573DB4CE),
                new BestMatch(0xDD0392C3, 0x78861603, 0xAFE37603),
                new BestMatch(0x78861603, 0xDD0392C3, 0xAFE37603),
                new BestMatch(0x0FE097A2, 0x37C985DB, 0x39D37174),
                new BestMatch(0x37C985DB, 0x0FE097A2, 0x39D37174),
                new BestMatch(0x0FE097A2, 0xEA737D10, 0xAC0BA280),
                new BestMatch(0xEA737D10, 0x0FE097A2, 0xAC0BA280),
                new BestMatch(0x033DFBFC, 0x2DE53C5F, 0x7F99D644),
                new BestMatch(0x2DE53C5F, 0x033DFBFC, 0x7F99D644),
                new BestMatch(0x30925599, 0xD2362A1E, 0x389D532D),
                new BestMatch(0xD2362A1E, 0x30925599, 0x389D532D),
                new BestMatch(0xB2F063AB, 0xD7B87666, 0xB8B13CCA),
                new BestMatch(0xD7B87666, 0xB2F063AB, 0xB8B13CCA),
                new BestMatch(0x5A99902C, 0xE0C899B5, 0x7C7102C7),
                new BestMatch(0xE0C899B5, 0x5A99902C, 0x7C7102C7),
                new BestMatch(0x5A99902C, 0x8D988C42, 0x65E36B0E),
                new BestMatch(0x8D988C42, 0x5A99902C, 0x65E36B0E),
                new BestMatch(0x5A99902C, 0x1BA88B35, 0xB6271B04),
                new BestMatch(0x1BA88B35, 0x5A99902C, 0xB6271B04),
                new BestMatch(0x5A99902C, 0xEA737D10, 0x39D37174),
                new BestMatch(0xEA737D10, 0x5A99902C, 0x39D37174),
                new BestMatch(0xE0C899B5, 0x76F89EC2, 0x498265E0),
                new BestMatch(0x76F89EC2, 0xE0C899B5, 0x498265E0),
                new BestMatch(0xE0C899B5, 0x1BA88B35, 0xC2B363F4),
                new BestMatch(0x1BA88B35, 0xE0C899B5, 0xC2B363F4),
                new BestMatch(0x8D988C42, 0x1BA88B35, 0x6CB05B28),
                new BestMatch(0x1BA88B35, 0x8D988C42, 0x6CB05B28),
                new BestMatch(0x1BA88B35, 0x275ED8FA, 0x8D145F23),
                new BestMatch(0x275ED8FA, 0x1BA88B35, 0x8D145F23),
                new BestMatch(0xEA737D10, 0x945CE145, 0x0BB30575),
                new BestMatch(0x945CE145, 0xEA737D10, 0x0BB30575),
                new BestMatch(0xEA737D10, 0x37C985DB, 0x97D049A8),
                new BestMatch(0x37C985DB, 0xEA737D10, 0x97D049A8),
                new BestMatch(0xEA737D10, 0xEEB61174, 0x2DD744FF),
                new BestMatch(0xEEB61174, 0xEA737D10, 0x2DD744FF),
                new BestMatch(0xEA737D10, 0x76F89EC2, 0x24D27017),
                new BestMatch(0x76F89EC2, 0xEA737D10, 0x24D27017),
                new BestMatch(0xEA737D10, 0xF71E3904, 0xD877757F),
                new BestMatch(0xF71E3904, 0xEA737D10, 0xD877757F),
                new BestMatch(0x945CE145, 0x37C985DB, 0x2D814031),
                new BestMatch(0x37C985DB, 0x945CE145, 0x2D814031),
                new BestMatch(0xED5EC5F7, 0x7C437A67, 0xD2243ED5),
                new BestMatch(0x7C437A67, 0xED5EC5F7, 0xD2243ED5),
                new BestMatch(0x78861603, 0x0B3FD614, 0x97D049A8),
                new BestMatch(0x0B3FD614, 0x78861603, 0x97D049A8),
                new BestMatch(0x12FBBB13, 0x3E9AB5FD, 0x2D814031),
                new BestMatch(0x3E9AB5FD, 0x12FBBB13, 0x2D814031),
                new BestMatch(0x521349E4, 0x7E72470A, 0xCF253FB6),
                new BestMatch(0x7E72470A, 0x521349E4, 0xCF253FB6),
                new BestMatch(0x132252FD, 0x9CD6388D, 0xAEAD545A),
                new BestMatch(0x9CD6388D, 0x132252FD, 0xAEAD545A),
                new BestMatch(0x527BAFCE, 0xC5FAA77D, 0xC2B363F4),
                new BestMatch(0xC5FAA77D, 0x527BAFCE, 0xC2B363F4),

                // Best Match With Items Auras
                new BestMatch(0x70117122, 0xF04E002B, 0x87471489),
                new BestMatch(0x8860B89F, 0x4A1F09B2, 0x1CE14FBC),
                new BestMatch(0x96896D7F, 0xDC2F0EC5, 0x45CDD04C),
                new BestMatch(0xA32C0E96, 0x7FBA6A5B, 0x71B15A4B),
                new BestMatch(0x0BB72234, 0xE98A6D2C, 0xBF742B22),
                new BestMatch(0x30925599, 0xE98A6D2C, 0x30804152),
                new BestMatch(0x6DE97FFF, 0x53DB64B5, 0xA6B04625),
                new BestMatch(0x584C1C16, 0xC5EB63C2, 0xB2E27760),
                new BestMatch(0x70117122, 0x54F6DC52, 0xB85993C5),
                new BestMatch(0x69D51C25, 0xC2C6DB25, 0x117713FE),
                new BestMatch(0xFFE51B52, 0x274F1C45, 0x931525CC),
                new BestMatch(0x1E50BFE8, 0xB17F1B32, 0xD2243ED5),
                new BestMatch(0xD58ED830, 0x84DA78DB, 0x46B2CF78),
                new BestMatch(0xD58ED830, 0x0B2E12AB, 0x052522BB),
                new BestMatch(0x1E62A874, 0x12EA7FAC, 0xC85E839F),
                new BestMatch(0x3DFD0665, 0x9D1E15DC, 0x30804152),
                new BestMatch(0xBB5A5C33, 0x3E8B7142, 0x2E6994B2),
                new BestMatch(0xDCB1AD61, 0xA8BB7635, 0xD3FDD73B),
        };

        public static IList<BestMatch> Galaxy = new List<BestMatch>
        {

        };
    }
}
